{"version":3,"file":"static/webpack/static\\development\\pages\\roadmap\\module\\lesson.js.21345ef0e2c224046974.hot-update.js","sources":["webpack:///./pages/roadmap/module/lesson/lesson.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport convert from 'htmr';\r\n\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { AppActions } from '@Actions';\r\n\r\nimport { Header, StarsCast } from '@Components';\r\nimport { ToolIcon, PlayIcon } from '@Components/Icons';\r\nimport Spinner from '@Components/LoadSpinner';\r\nimport { IHomePage, IStore } from '@Interfaces';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport '../../../roadmap/module.scss'\r\nimport {\r\n\tgetUser,\r\n\tgetToken\r\n} from '@Redux/utils';\r\nimport { computeModulesProgression } from '../../../../src/Helpers/index';\r\n\r\nexport class LessonOnePage extends React.Component<IHomePage.IProps, IHomePage.IState> {\r\n\tprivate content = '';\r\n\tprivate lessonId:any = null;\r\n\tprivate module:any = null;\r\n\tprivate nextModule:any = null;\r\n\tprivate nextModuleData:any = null;\r\n\tprivate moduleTitle:any = null;\r\n\tprivate moduleLessons:any = {};\r\n\r\n\tconstructor (props:IHomePage.IProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoduleProgression: 0\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tif (!getToken()) return this.props.router.push('/login')\r\n\r\n\t\tconst { app, router, fetchRoadmapModule } = this.props\r\n\r\n\t\tconst { lesson, module } = router.query;\r\n\t\tconst { roadmapModules, roadmapModulesContent } = app;\r\n\r\n\t\tconst lessonId = parseInt(lesson.split('-')[1], 10);\r\n\t\tconst moduleLessons = roadmapModules[this.module] ? roadmapModules[this.module].lessons : {};\r\n\r\n\t\tfetchRoadmapModule({\r\n\t\t\tmodule\r\n\t\t}, roadmapModulesContent)\r\n\r\n\t\tthis.lessonId = lessonId;\r\n\t\tthis.module = module;\r\n\t\tthis.moduleTitle = roadmapModules[module].title;\r\n\t\tthis.nextModule = roadmapModules[module].nextModule;\r\n\t\tthis.nextModuleData = roadmapModules[this.nextModule];\r\n\t\tthis.moduleLessons = moduleLessons;\r\n\t\t\r\n\t\tconst moduleId = roadmapModules[module].id;\r\n\r\n\t\tconst moduleLessonsCount = Object.keys(roadmapModules[this.module].lessons).length;\r\n\r\n\t\tconst user = getUser()\r\n\r\n\t\tthis.props.updateUserLesson({\r\n\t\t\tlessonId: lessonId,\r\n\t\t\tlessonsCount: moduleLessonsCount,\r\n\t\t\tmoduleId,\r\n\t\t\tuserId: user.id,\r\n\t\t\tprogression: 100\r\n\t\t}, (lessons:any) => {\r\n\t\t\tconst moduleProgression = computeModulesProgression(lessons, moduleLessonsCount);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tmoduleProgression\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\trenderModuleCardLink({\r\n\t\ticon,\r\n\t\ttitle\r\n\t}: {\r\n\t\ticon: any,\r\n\t\ttitle: string\r\n\t}):JSX.Element {\r\n\t\tconst Icon = icon;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'card d-flex flex-row module__link-card'}>\r\n\t\t\t\t<section className={'module__link-card__preview d-flex justify-content-center align-items-center'}>\r\n\t\t\t\t\t<Icon />\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className={'px-3 py-4 module__link-card__content'}>\r\n\t\t\t\t\t<h5 className={'h6 module__link-card__title'}>{title}</h5>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tpublic renderUpcomingLinks(): JSX.Element {\r\n\t\tconst { roadmapModules } = this.props.app;\r\n\t\tconst nextLesson = this.module ? roadmapModules[this.module].lessons[this.lessonId + 1] : {};\r\n\t\tconst hasValidNextLesson = nextLesson ? Object.keys(nextLesson).length > 0: false;\r\n\t\tconst nextLessonTitle =  hasValidNextLesson ? nextLesson.title : '';\r\n\t\tconst nextLessonType =  hasValidNextLesson ? nextLesson.type : '';\r\n\t\tconst isAtLastLesson = roadmapModules[this.module] ?\r\n\t\t\t(this.lessonId === Object.keys(roadmapModules[this.module].lessons).length)\r\n\t\t\t: false;\r\n\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t{!isAtLastLesson && hasValidNextLesson ? (\r\n\t\t\t\t<div className={'mb-5'}>\r\n\t\t\t\t\t<h4 className={'h5'}>You've Completed Lesson {this.lessonId}</h4>\r\n\t\t\t\t\t<h5 className={'h6 mb-3 text-black-50'}>Let's move on to the next one.</h5>\r\n\r\n\t\t\t\t\t<Link prefetch href={`/roadmap/${this.module}/lesson-${this.lessonId + 1}`}>\r\n\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\ticon: nextLessonType === 'lesson' ? PlayIcon: ToolIcon,\r\n\t\t\t\t\t\t\t\ttitle: nextLessonTitle\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t): (\r\n\t\t\t\t\t<div className={'mb-5'}>\r\n\t\t\t\t\t\t<h4 className={'h5 text-brand'}>Great! You've finished this module!</h4>\r\n\t\t\t\t\t\t<h5 className={'h6 mb-3 text-black-50'}>You are doing awesome! Let's move on to the next one.</h5>\r\n\r\n\t\t\t\t\t\t<Link prefetch href={`/roadmap/${this.nextModule}`}>\r\n\t\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\ticon: PlayIcon,\r\n\t\t\t\t\t\t\t\ttitle: this.nextModuleData ? this.nextModuleData.title : ''\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { app } = this.props;\r\n\t\tconst { roadmapModulesContent } = app;\r\n\t\tconst content = convert(roadmapModulesContent[this.module] ? roadmapModulesContent[this.module].content : 'Loading...', {\r\n\t\t\ttransform: {\r\n\t\t\t\treactplayer: (props:any) => <ReactPlayer url={props.url} width={'100%'} light playing />\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column module\" style={{ paddingTop: '100px' }}>\r\n\t\t\t\t<Head>\r\n\t\t\t\t\t<title>Lesson {this.lessonId} | Module: {this.moduleTitle}</title>\r\n\t\t\t\t</Head>\r\n\r\n        <Header\r\n\t\t\t\t\tbacklinkHref={`/roadmap/${this.module}`}\r\n\t\t\t\t\ttitle={`Lesson ${this.lessonId}`}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tzIndex: 900,\r\n\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{!this.props.app.isUpdatingUserLesson ? <StarsCast progression={this.state.moduleProgression || 0} />: <Spinner width={'25px'} height={'25px'} />}\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<section className={'mb-5 container'}>\r\n\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t\t<section className={'container'}>\r\n\t\t\t\t\t\t\t{this.renderUpcomingLinks()}\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n\treturn {\r\n\t\tapp: state.app\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => (\r\n\t{\r\n\t\tupdateUserLesson: bindActionCreators(AppActions.updateUserLesson, dispatch)\r\n\t}\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonOnePage);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AADA;AAHA;AAMA;AACA;AAhBA;AAAA;AAAA;AAiBA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AADA;AAGA;AACA;AA1DA;AAAA;AAAA;AAkEA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AA/EA;AAAA;AAAA;AAiFA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAFA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAFA;AAUA;AAzHA;AAAA;AAAA;AA2HA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAIA;AAAA;AAQA;AArKA;AACA;AADA;AAAA;AACA;AAuKA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}