{"version":3,"file":"static/webpack/static\\development\\pages\\roadmap\\module.js.586762b25e36e2c5192d.hot-update.js","sources":["webpack:///./pages/roadmap/module/module.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport convert from 'htmr';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\n\r\nimport { Header, StarsCast } from '@Components';\r\nimport { PlayIcon, ToolIcon } from '@Components/Icons';\r\nimport Spinner from '@Components/LoadSpinner';\r\nimport { AppActions } from '@Actions';\r\nimport { IHomePage, IStore } from '@Interfaces';\r\n\r\nimport '../../roadmap/module.scss'\r\nimport {\r\n\tgetUser,\r\n\tgetToken\r\n} from '@Redux/utils'\r\nimport { computeModulesProgression } from '../../../src/Helpers/index'\r\n\r\nexport class ModulePage extends React.Component<IHomePage.IProps, IHomePage.IState> {\r\n\tcontent = '';\r\n\tmoduleTitle = '';\r\n\tmodule = '';\r\n\tlessons: { [title:number]: any } = {}\r\n\r\n\tconstructor (props:IHomePage.IProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoduleProgression: 0,\r\n\t\t\tuserLessons: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tif (!getToken()) return this.props.router.push('/login')\r\n\t\tconst {\r\n\t\t\tapp,\r\n\t\t\tgetUserLessons,\r\n\t\t\tfetchRoadmapModule\r\n\t\t} = this.props;\r\n\t\tconst { roadmapModules, roadmapModulesContent } = app;\r\n\r\n\t\tconst module:string = this.props.router.query.module;\r\n\t\tthis.module = module;\r\n\t\tfetchRoadmapModule({\r\n\t\t\tmodule\r\n\t\t}, roadmapModulesContent)\r\n\r\n\t\tthis.content = roadmapModules[module].content || 'Loading...';\r\n\t\tthis.moduleTitle = roadmapModules[module].title\r\n\t\tconst moduleLessons = roadmapModules[module].lessons;\r\n\r\n\t\tthis.lessons = moduleLessons\r\n\t\tconst user = getUser()\r\n\t\tlet moduleProgression;\r\n\r\n\t\tgetUserLessons({\r\n\t\t\tmoduleId: roadmapModules[module].id,\r\n\t\t\tuserId: user.id\r\n\t\t}, (userLessons:any) => {\r\n\t\t\tmoduleProgression =  computeModulesProgression(userLessons, Object.keys(moduleLessons).length);\r\n\r\n\t\t\tif (moduleProgression === 0 || !userLessons.length) {\r\n\t\t\t\tthis.props.updateUserLesson({\r\n\t\t\t\t\tlessonId: 1,\r\n\t\t\t\t\tlessonsCount: Object.keys(moduleLessons).length,\r\n\t\t\t\t\tmoduleId: roadmapModules[module].id,\r\n\t\t\t\t\tuserId: user.id,\r\n\t\t\t\t\tprogression: 0\r\n\t\t\t\t}, (lessons:any) => {\r\n\t\t\t\t\tmoduleProgression = computeModulesProgression(lessons, Object.keys(moduleLessons).length);\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmoduleProgression,\r\n\t\t\t\t\t\tuserLessons: lessons.map((lesson:any) => lesson.lesson_id)\r\n\t\t\t\t\t})\r\n\t\t\t\t});\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmoduleProgression,\r\n\t\t\t\t\tuserLessons: userLessons.map((userLesson:any) => userLesson.lesson_id)\r\n\t\t\t\t})\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trenderModuleCardLink({\r\n\t\ticon,\r\n\t\ttitle,\r\n\t\tisDisabled\r\n\t}: {\r\n\t\ticon: any,\r\n\t\ttitle: string,\r\n\t\tisDisabled: boolean\r\n\t}):JSX.Element {\r\n\t\tconst Icon = icon;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`card d-flex flex-row module__link-card ${isDisabled && 'module__link-card--disabled'}`}>\r\n\t\t\t\t<section className={'module__link-card__preview d-flex justify-content-center align-items-center'}>\r\n\t\t\t\t\t<Icon />\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className={'px-3 py-4 module__link-card__content'}>\r\n\t\t\t\t\t<h5 className={'h6 module__link-card__title'}>{title}</h5>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tpublic renderUpcomingLinks(): JSX.Element {\r\n\t\tconst userLessons:Array<number> = this.state.userLessons || [];\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className={'h5 mb-3'}>Up Next</h4>\r\n\r\n\t\t\t\t<ul className={'list list-unstyled'}>\r\n\r\n\t\t\t\t{Object.keys(this.lessons).map((lessonId: any, key:number) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t} = this.lessons[lessonId];\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={key} className={'mb-2'}>\r\n\t\t\t\t\t\t{ (userLessons).includes(parseInt(lessonId, 10)) ? (\r\n\t\t\t\t\t\t\t<Link prefetch href={`/roadmap/${this.module}/lesson-${lessonId}`}>\r\n\t\t\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\t\ticon: type === 'lesson' ? PlayIcon: ToolIcon,\r\n\t\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\t\tisDisabled: false\r\n\t\t\t\t\t\t\t\t})}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t): (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\t\ticon: type === 'lesson' ? PlayIcon: ToolIcon,\r\n\t\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\t\tisDisabled: true\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { app } = this.props.app\r\n\t\tconst { roadmapModulesContent } = app;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column module\" style={{ paddingTop: '100px' }}>\r\n\t\t\t\t<Head>\r\n\t\t\t\t\t<title>{this.moduleTitle} | 1Life</title>\r\n\t\t\t\t</Head>\r\n\r\n        <Header\r\n\t\t\t\t\tbacklinkHref={'/roadmap'}\r\n\t\t\t\t\ttitle={this.moduleTitle}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tzIndex: 900,\r\n\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t{!this.props.app.isUpdatingUserLesson ? <StarsCast progression={this.state.moduleProgression || 0} />: <Spinner width={'25px'} height={'25px'} />}\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div className={'container'}>\r\n\t\t\t\t\t\t{convert(roadmapModulesContent[this.module] ? roadmapModulesContent[this.module].content : 'Loading...')}\r\n\t\t\t\t\t\t<section className={'row'}>\r\n\t\t\t\t\t\t\t<div className={'col-12'}>\r\n\t\t\t\t\t\t\t\t{this.renderUpcomingLinks()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n\treturn {\r\n\t\thome: state.home,\r\n\t\tapp: state.app,\r\n\t\tuser: state.user\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => (\r\n\t{\r\n\t\tupdateUserLesson: bindActionCreators(AppActions.updateUserLesson, dispatch),\r\n\t\tgetUserLessons: bindActionCreators(AppActions.getUserLessons, dispatch),\r\n\t\tfetchRoadmapModule: bindActionCreators(AppActions.fetchRoadmapModule, dispatch),\r\n\t}\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModulePage);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;AAdA;AAAA;AAAA;AAeA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAlEA;AAAA;AAAA;AA4EA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAzFA;AAAA;AAAA;AA2FA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AASA;AAKA;AAnIA;AAAA;AAAA;AAqIA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AASA;AAzKA;AACA;AADA;AAAA;AACA;AA2KA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}