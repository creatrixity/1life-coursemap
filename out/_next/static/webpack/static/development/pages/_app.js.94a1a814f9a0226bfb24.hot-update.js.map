{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.94a1a814f9a0226bfb24.hot-update.js","sources":["webpack:///./src/Actions/AppActions.ts"],"sourcesContent":["import { Dispatch } from 'redux';\r\nimport { ActionConsts } from \"@Definations\";\r\n\r\n/**\r\n * ACTIONS\r\n*/\r\nexport const AppActions = {\r\n\tMap : (payload:any) => ({\r\n\t\tpayload,\r\n\t\ttype: ActionConsts.App.SetReducer\r\n\t}),\r\n\r\n\tReset : () => ({\r\n\t\ttype: ActionConsts.App.ResetReducer\r\n\t}),\r\n\r\n\tupdateUserLesson : (payload:any, callback:Function) => {\r\n    return ((dispatch:Dispatch, {}, api:any) => {\r\n\t\t\tdispatch(AppActions.Map({ isUpdatingUserLesson: true }))\r\n\t\t\t\r\n      return api.updateUserLesson(payload)\r\n        .then(api.checkStatus)\r\n\t\t\t\t.then(api.toJSON)\r\n        .then((response:any) => { \r\n          dispatch(AppActions.Map({\r\n            isUpdatingUserLesson: false,\r\n          }))\r\n\r\n          return callback(response)\r\n        })\r\n        .catch(() => api.errorHandler(dispatch))\r\n    })\r\n  },\r\n\r\n\tgetUserLessons : (payload:any, callback:Function) => {\r\n    return ((dispatch:Dispatch, {}, api:any) => {\t\t\t\r\n      return api.getUserLessons(payload)\r\n        .then(api.checkStatus)\r\n\t\t\t\t.then(api.toJSON)\r\n        .then((response:any) => { \r\n          return callback(response)\r\n        })\r\n        .catch(() => api.errorHandler(dispatch))\r\n    })\r\n  },\r\n\r\n\tgetUserModules : (payload:any, callback:Function) => {\r\n    return ((dispatch:Dispatch, {}, api:any) => {\t\t\t\r\n      return api.getUserModules(payload)\r\n        .then(api.checkStatus)\r\n\t\t\t\t.then(api.toJSON)\r\n        .then((response:any) => { \r\n          return callback(response)\r\n        })\r\n        .catch(() => api.errorHandler(dispatch))\r\n    })\r\n  },\r\n\r\n\tfetchRoadmapModule : (payload:any, roadmapModulesContent:any) => {\r\n    const { module, id } = payload;\r\n\r\n    return ((dispatch:Dispatch, {}, api:any) => {\t\r\n      dispatch(AppActions.Map({ isFetchingRoadmapModule: true }))\r\n      \t\t\r\n      return api.fetchRoadmapModule(payload)\r\n        .then(api.checkStatus)\r\n        .then((response:any) => { \r\n          console.log(response);\r\n          // let newRoadmapModule = {\r\n          //   [module]: {\r\n          //     content: response\r\n          //   }\r\n          // }\r\n\r\n          // if (id) {\r\n          //   newRoadmapModule = {\r\n          //     [module]: {\r\n          //       ...roadmapModulesContent[module],\r\n          //       [id]: {\r\n          //         content: response\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // }\r\n      \r\n          // dispatch(AppActions.Map({\r\n          //   isFetchingRoadmapModule: false,\r\n          //   roadmapModulesContent: {\r\n          //     ...roadmapModulesContent,\r\n          //     newRoadmapModule\r\n          //   }\r\n          // })\r\n          // )\r\n\r\n          return response;\r\n        })\r\n    })\r\n  },\r\n}"],"mappings":";;;;;;;;;;;;;;;AACA;AAEA;;;;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3FA;;;;A","sourceRoot":""}