{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.2e2a24778f31d7c7793d.hot-update.js","sources":["webpack:///./src/Redux/api.ts"],"sourcesContent":["import { Dispatch } from 'redux';\r\nimport { AppActions } from '@Actions';\r\nimport fetch from 'isomorphic-fetch';\r\nimport * as utils from './utils';\r\nimport getConfig from 'next/config';\r\nconst qs = require('query-string');\r\n\r\nconst {\r\n  publicRuntimeConfig: { envSpecifics }\r\n} = getConfig();\r\n\r\nconst hostAddress = envSpecifics.api;\r\n\r\nfunction prefixHostAddress(url: string) {\r\n  return `${hostAddress}/api${url}`;\r\n}\r\n\r\n/**\r\n * Creates a user http request.\r\n */\r\nfunction createUser(user: Object) {\r\n  return fetch(prefixHostAddress('/v1/register'), {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  });\r\n}\r\n\r\n/**\r\n * Creates an entry in the journal.\r\n */\r\nfunction createJournalFeedback(payload: Object) {\r\n  return fetch(prefixHostAddress('/v1/feedback'), {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n}\r\n\r\n/**\r\n * Fetches journal feedback\r\n */\r\nfunction getJournalFeedback(payload: Object) {\r\n  return fetch(prefixHostAddress('/v1/feedback/getFeedback'), {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${utils.getToken()}`\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n}\r\n\r\n/**\r\n * Updates a user module.\r\n */\r\nfunction updateUserModule(payload: Object) {\r\n  return fetch(prefixHostAddress('/v1/modules/updateUserModule'), {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${utils.getToken()}`\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a user http request.\r\n */\r\nfunction updateUserLesson(payload: Object) {\r\n  return fetch(\r\n    prefixHostAddress(`/v1/modules/updateUserLesson?${qs.stringify(payload)}`),\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${utils.getToken()}`\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Creates a user http request.\r\n */\r\nfunction getUserLessons(payload: Object) {\r\n  return fetch(\r\n    prefixHostAddress(`/v1/modules/getUserLessons/?${qs.stringify(payload)}`),\r\n    {\r\n      method: 'get',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${utils.getToken()}`\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Creates a user http request.\r\n */\r\nfunction getUserModules(payload: Object) {\r\n  return fetch(prefixHostAddress('/v1/modules/getUserModules'));\r\n}\r\n\r\n/**\r\n * Fetches the lesson view for a course module\r\n * @param {Object} payload\r\n * @returns Promise<Object>\r\n */\r\nfunction fetchCourseModuleLessonView(payload: Object) {\r\n  return fetch(prefixHostAddress('/v1/fetchModuleLessonView'), {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${utils.getToken()}`\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n}\r\n\r\n/**\r\n * Fetches the lesson view for a course module\r\n * @param {Object} payload\r\n * @returns Promise<Object>\r\n */\r\nfunction fetchLessonsByModuleId(payload: any) {\r\n  return fetch(prefixHostAddress(`/v1/modules/${payload.moduleId}`), {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${utils.getToken()}`\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a HTTP request that fetches a collection of courses.\r\n * @returns Promise<Object>\r\n */\r\nfunction fetchCourses() {\r\n  return fetch(prefixHostAddress('/v1/courses'), {\r\n    method: 'get',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a HTTP request that fetches a collection of courses.\r\n * @returns Promise<Object>\r\n */\r\nfunction fetchCourseModules(courseId: number) {\r\n  return fetch(prefixHostAddress(`/v1/courses/${courseId}/modules`), {\r\n    method: 'get',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a user http request.\r\n */\r\nfunction authenticateUser(user: Object) {\r\n  return fetch(prefixHostAddress('/v1/login'), {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  });\r\n}\r\n\r\n/**\r\n * Checks the status of a request.\r\n *\r\n * @param {Object} response\r\n */\r\nfunction checkStatus(response: any) {\r\n  if (response.status >= 200 && response.status < 401) {\r\n    return Promise.resolve(response);\r\n  } else {\r\n    return Promise.reject(response);\r\n  }\r\n}\r\n\r\n/**\r\n * Sets an auth token.\r\n *\r\n * @param {Object<Response>} response\r\n * @return {Object<Response>}\r\n */\r\nfunction setToken(response: any) {\r\n  if (response.credentials) {\r\n    localStorage.setItem(\r\n      'token',\r\n      JSON.stringify({ token: response.credentials.token })\r\n    );\r\n    localStorage.setItem(\r\n      'refreshToken',\r\n      JSON.stringify({ refreshToken: response.credentials.refreshToken })\r\n    );\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\n/**\r\n * Sets the auth user.\r\n *\r\n * @param {Object<Response>} response\r\n * @return {Object<Response>}\r\n */\r\nfunction setUser(response: any) {\r\n  if (response.user) {\r\n    localStorage.setItem('user', JSON.stringify({ user: response.user }));\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\n/**\r\n * Checks the status of a request.\r\n *\r\n * @param {Object} response\r\n */\r\nfunction errorHandler(dispatch: Dispatch, e: any) {\r\n  console.log(\r\n    'Sorry, we encountered an error trying to process your request. Please try again.'\r\n  );\r\n\r\n  dispatch(\r\n    AppActions.Map({\r\n      hasRequestError: true\r\n    })\r\n  );\r\n}\r\n\r\nfunction toText(response: any) {\r\n  return response.text();\r\n}\r\n\r\nfunction toJSON(response: any) {\r\n  return response.json();\r\n}\r\n\r\nexport default {\r\n  authenticateUser,\r\n  createJournalFeedback,\r\n  getJournalFeedback,\r\n  createUser,\r\n  checkStatus,\r\n  errorHandler,\r\n  fetchCourses,\r\n  fetchCourseModules,\r\n  fetchCourseModuleLessonView,\r\n  fetchLessonsByModuleId,\r\n  getUserLessons,\r\n  getUserModules,\r\n  setToken,\r\n  setUser,\r\n  toText,\r\n  toJSON,\r\n  updateUserModule,\r\n  updateUserLesson\r\n};\r\n"],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AASA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AASA;AAEA;;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AAEA;;;;;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AAEA;;;;;AAGA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AASA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AASA;AAEA;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAEA;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAEA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAMA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AAIA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;;;A","sourceRoot":""}