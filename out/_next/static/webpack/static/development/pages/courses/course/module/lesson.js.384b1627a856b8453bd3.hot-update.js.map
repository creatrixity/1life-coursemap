{"version":3,"file":"static/webpack/static\\development\\pages\\courses\\course\\module\\lesson.js.384b1627a856b8453bd3.hot-update.js","sources":["webpack:///./pages/courses/course/module/lesson/lesson.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport convert from 'htmr';\r\n\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { AppActions, LessonActions, ModuleActions } from '@Actions';\r\n\r\nimport { Header, StarsCast, LoaderScreen, JournalInput } from '@Components';\r\nimport { ToolIcon, PlayIcon } from '@Components/Icons';\r\nimport Spinner from '@Components/LoadSpinner';\r\nimport { ILessonPage, IStore } from '@Interfaces';\r\nimport { LessonSelectors, ModuleSelectors } from '@Selectors';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport '../module.scss'\r\nimport {\r\n\tgetUser,\r\n\tgetToken\r\n} from '@Redux/utils';\r\nimport { computeModulesProgression, extractIdFromSlug, extractSlugFromString, sleep } from '@Helpers';\r\n\r\nexport class LessonPage extends React.Component<ILessonPage.IProps, ILessonPage.IState> {\r\n\tprivate course = '';\r\n\tprivate currentCourse:any = {};\r\n\tprivate currentCourseModule: {[id:string]: any} = {};\r\n\tprivate currentCourseModuleLessons:{[id:string]: any} = {};\r\n\tprivate courseId:any = null;\r\n\tprivate moduleId:any = null;\r\n\tprivate lessonId:any = null;\r\n\tprivate module:any = null;\r\n\tprivate nextModule:any = null;\r\n\tprivate nextModuleData:any = null;\r\n\tprivate moduleTitle:any = null;\r\n\r\n\tconstructor (props:ILessonPage.IProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoduleProgression: 0,\r\n\t\t\tratingCumulative: 0,\r\n\t\t\tlessonView: '<div></div>'\r\n\t\t}\r\n\r\n\t\tthis.handleSaveJournalInput = this.handleSaveJournalInput.bind(this);\r\n\t}\r\n\r\n\trefreshFeedback({\r\n\t\tuserId,\r\n\t\tcourseId,\r\n\t\tmoduleId,\r\n\t\tlessonId\r\n\t}:any) {\r\n\t\t(this.props as any).getJournalFeedback({\r\n\t\t\tuser_id: userId,\r\n\t\t\tcourse_id: courseId,\r\n\t\t\tmodule_id: moduleId,\r\n\t\t\tlesson_id: lessonId,\r\n\t\t}, (feedback:any) => {\r\n\t\t\tlet feedbackData = feedback[courseId][moduleId][lessonId]\r\n\r\n\t\t\tlet feedbackDataKeys = Object.keys(feedbackData).filter((key:any) => {\r\n\t\t\t\treturn feedbackData[key].type === 'rating'\r\n\t\t\t})\r\n\r\n\t\t\tconst ratingCumulative = feedbackDataKeys.reduce((previousValue:any, currentValue:any, currentIndex:any) => {\r\n\t\t\t\treturn parseInt(previousValue) + parseInt(feedbackData[feedbackDataKeys[currentIndex]].answer);\r\n\t\t\t}, 0)\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tratingCumulative\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trenderModuleCardLink({\r\n\t\ticon,\r\n\t\ttitle\r\n\t}: {\r\n\t\ticon: any,\r\n\t\ttitle: string\r\n\t}):JSX.Element {\r\n\t\tconst Icon = icon;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'card d-flex flex-row module__link-card'}>\r\n\t\t\t\t<section className={'module__link-card__preview d-flex justify-content-center align-items-center'}>\r\n\t\t\t\t\t<Icon />\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className={'px-3 py-4 module__link-card__content'}>\r\n\t\t\t\t\t<h5 className={'h6 module__link-card__title'}>{title}</h5>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tpublic renderUpcomingLinks(): JSX.Element {\r\n\t\tconst { getCourseModuleLessons, getCourseModuleNextLesson, router } = (this.props as any)\r\n\t\tconst {query: {course, module}} = router as any;\r\n\t\tconst moduleLessons = getCourseModuleLessons(this.moduleId);\r\n\t\tconst lessonsCount = moduleLessons.length;\r\n\t\t\r\n\t\tconst nextLesson = getCourseModuleNextLesson(this.moduleId, this.lessonId);\r\n\t\tconst hasValidNextLesson = Object.keys(nextLesson).length > 0;\r\n\t\tconst nextLessonTitle = hasValidNextLesson && nextLesson.title;\r\n\t\tconst nextLessonType = hasValidNextLesson && nextLesson.type;\r\n\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t{hasValidNextLesson ? (\r\n\t\t\t\t<div className={'mb-5'}>\r\n\t\t\t\t\t<h4 className={'h5'}>You've Completed This Lesson</h4>\r\n\t\t\t\t\t<h5 className={'h6 mb-3 text-black-50'}>Let's move on to the next one.</h5>\r\n\r\n\t\t\t\t\t<Link prefetch href={`/courses/${course}/${module}/lesson-${this.lessonId + 1}`}>\r\n\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\ticon: nextLessonType === 'lesson' ? PlayIcon: ToolIcon,\r\n\t\t\t\t\t\t\t\ttitle: nextLessonTitle\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t): (\r\n\t\t\t\t\t<div className={'mb-5'}>\r\n\t\t\t\t\t\t<h4 className={'h5 text-brand'}>Great! You've finished this module!</h4>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h5 className={'h6 mb-3 text-black-50'}>Whoohoo! You have finished this module.</h5>\r\n\t\t\t\t\t\t\t<Link prefetch href={`/courses/${course}`}>\r\n\t\t\t\t\t\t\t\t{this.renderModuleCardLink({\r\n\t\t\t\t\t\t\t\t\ticon: PlayIcon,\r\n\t\t\t\t\t\t\t\t\ttitle: 'See all modules'\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n\r\n\thandleSaveJournalInput({ question, type, value, tag }: { value:string, question:string, tag: number, type: string }, callback:() => any) {\r\n\t\t(this.props as any).createJournalFeedback({\r\n\t\t\tquestion,\r\n\t\t\tanswer: value,\r\n\t\t\ttype,\r\n\t\t\tuser_id: getUser().id,\r\n\t\t\tcourse_id: this.courseId,\r\n\t\t\tmodule_id: this.moduleId,\r\n\t\t\tlesson_id: this.lessonId,\r\n\t\t\tfeedback_id: tag\r\n\t\t}, () => {\r\n\t\t\tthis.refreshFeedback({\r\n\t\t\t\tuserId: getUser().id,\r\n\t\t\t\tcourseId: this.courseId,\r\n\t\t\t\tmoduleId: this.moduleId,\r\n\t\t\t\tlessonId: this.lessonId\r\n\t\t\t})\t\r\n\t\t})\r\n\t}\r\n\r\n\tasync componentDidMount () {\r\n\t\tif (!getToken()) return this.props.router.push('/login')\r\n\r\n\t\tconst {\r\n\t\t\tapp,\r\n\t\t\trouter,\r\n\t\t\tfetchLessonView,\r\n\t\t\tupdateUserLesson,\r\n\t\t\tfetchCourseModuleLessons,\r\n\t\t\tgetCourseModuleLessonsCount\r\n\t\t} = this.props\r\n\r\n\t\tconst { course, lesson, module } = router.query as any;\r\n\t\t// const { coursemapModules, coursemapModulesContent } = app;\r\n\r\n\t\tconst courseId = parseInt(extractIdFromSlug(course));\r\n\t\tconst moduleId = parseInt(extractIdFromSlug(module));\r\n\t\tconst lessonId = parseInt(extractIdFromSlug(lesson));\r\n\t\tconst courseSlug = extractSlugFromString(course);\r\n\t\tconst moduleSlug = extractSlugFromString(module);\r\n\r\n\t\tthis.courseId = courseId\r\n\t\tthis.moduleId = moduleId\r\n\t\tthis.lessonId = lessonId\r\n\r\n\t\tfetchLessonView({ courseSlug, moduleSlug, lessonId}, (lessonView:any) => {\r\n\t\t\tthis.setState({ lessonView })\r\n\t\t\tfetchCourseModuleLessons({ moduleId })\r\n\t\t})\r\n\r\n\t\tconst user = getUser()\r\n\r\n\t\tupdateUserLesson({\r\n\t\t\tcourseId,\r\n\t\t\tmoduleId,\r\n\t\t\tlessonId,\r\n\t\t\tuserId: user.id,\r\n\t\t\tprogression: 100\r\n\t\t}, async (lessons:any) => {\r\n\t\t\tawait sleep(1500)\r\n\t\t\tconst moduleLessonsCount = getCourseModuleLessonsCount(moduleId);\r\n\t\t\tconst moduleProgression = computeModulesProgression(lessons, moduleLessonsCount);\r\n\t\t\tconsole.log({ moduleProgression, moduleLessonsCount })\r\n\t\t\tthis.setState({ moduleProgression})\r\n\t\t});\r\n\r\n\t\tthis.refreshFeedback({\r\n\t\t\tuserId: user.id,\r\n\t\t\tcourseId,\r\n\t\t\tmoduleId,\r\n\t\t\tlessonId\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t\tthis.handleSaveJournalInput = () => {};\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { app, isFetchingLessonView, router: {query} } = this.props\r\n\t\tconst { coursemapModulesFeedback } = app\r\n\t\tconst hasModulesFeedback = Object.keys(coursemapModulesFeedback).length;\r\n\r\n\t\tconst journalInputValue = hasModulesFeedback ? coursemapModulesFeedback[this.courseId][this.moduleId][this.lessonId]: '';\r\n\r\n\t\tconst content = convert(this.state.lessonView, {\r\n\t\t\ttransform: {\r\n\t\t\t\treactplayer: (props:any) => <ReactPlayer url={props.url} width={'100%'} light playing />,\r\n\t\t\t\tratingfeedback: (props:any) => {\r\n\t\t\t\t\tconst { displaythreshold } = props;\r\n\t\t\t\t\tconst { ratingCumulative = 0 } = this.state;\r\n\t\t\t\t\tconst [rangeStart, rangeEnd] = displaythreshold.split(':')\r\n\t\t\t\t\tconst isCumulativeWithinBounds = ratingCumulative && ratingCumulative >= parseInt(rangeStart) && ratingCumulative <= parseInt(rangeEnd)\r\n\r\n\t\t\t\t\treturn isCumulativeWithinBounds ? props.children: null;\r\n\t\t\t\t},\r\n\t\t\t\tjournalinput: (props:any) => {\r\n\t\t\t\t\tconst tag = parseInt(props.tag);\r\n\t\t\t\t\tconst value = journalInputValue && tag in journalInputValue ? journalInputValue[tag].answer: '';\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<JournalInput\r\n\t\t\t\t\t\t\tonSaveJournalInput={this.handleSaveJournalInput}\r\n\t\t\t\t\t\t\ttag={tag}\r\n\t\t\t\t\t\t\ttype={props.type || 'textarea'}\r\n\t\t\t\t\t\t\tname={props.name}\r\n\t\t\t\t\t\t\tlabel={props.label}\r\n\t\t\t\t\t\t\tshowLabel={!props.showlabel}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column module\" style={{ paddingTop: '100px' }}>\r\n\t\t\t\t<Head>\r\n\t\t\t\t\t<title>Lesson {this.lessonId} | Module: {this.moduleTitle}</title>\r\n\t\t\t\t</Head>\r\n\r\n        <Header backlinkHref={`/courses/${query.course}/${query.module}`} title={`Lesson`}>\r\n\t\t\t\t\t{!this.props.app.isUpdatingUserLesson ? <StarsCast progression={this.state.moduleProgression || 0} />: <Spinner width={'25px'} height={'25px'} />}\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t{isFetchingLessonView ? \r\n\t\t\t\t\t\t<LoaderScreen caption={'Fetching content...'} /> :\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<section className={'mb-5 container'}>{content}</section>\r\n\t\t\t\t\t\t\t<section className={'container'}>{this.renderUpcomingLinks()}</section>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n\treturn {\r\n\t\tapp: state.app,\r\n\t\tisFetchingLessonView: LessonSelectors.getIsFetchingLessonView(state),\r\n\t\tgetCourseModuleLessons: (id:number) => ModuleSelectors.getCourseModuleLessons(id)(state),\r\n\t\tgetCourseModuleLessonsCount: (id:number) => ModuleSelectors.getCourseModuleLessonsCount(id)(state),\r\n\t\tgetCourseModuleNextLesson: (moduleId:number, lessonId:number) => ModuleSelectors.getCourseModuleNextLesson(moduleId, lessonId)(state),\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => (\r\n\t{\r\n\t\tfetchCourseModuleLessons: bindActionCreators(ModuleActions.fetchCourseModuleLessons, dispatch),\r\n\t\tupdateUserLesson: bindActionCreators(AppActions.updateUserLesson, dispatch),\r\n\t\tfetchLessonView: bindActionCreators(LessonActions.fetchLessonView, dispatch),\r\n\t\tcreateJournalFeedback: bindActionCreators(AppActions.createJournalFeedback, dispatch),\r\n\t\tgetJournalFeedback: bindActionCreators(AppActions.getJournalFeedback, dispatch)\r\n\t}\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonPage);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AATA;AAUA;AACA;AAxBA;AAAA;AAAA;AA8BA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAnDA;AAAA;AAAA;AA2DA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAxEA;AAAA;AAAA;AA0EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAFA;AAOA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAWA;AAtHA;AAAA;AAAA;AAwHA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AA1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AA0JA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AAJA;AACA;AA3LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAmMA;AACA;AApMA;AAAA;AAAA;AAsMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAzBA;AADA;AA8BA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AACA;AAAA;AAOA;AAlQA;AACA;AADA;AAAA;AACA;AAoQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}