{"version":3,"file":"static/webpack/static\\development\\pages\\courses\\course\\module.js.7ef8f46599a335f2c561.hot-update.js","sources":["webpack:///./pages/courses/course/module/module.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport convert from 'htmr';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\n\r\nimport { Header, StarsCast, LoaderScreen } from '@Components';\r\nimport { PlayIcon, ToolIcon } from '@Components/Icons';\r\nimport Spinner from '@Components/LoadSpinner';\r\nimport { AppActions, LessonActions, ModuleActions } from '@Actions';\r\nimport { IModulePage, IStore } from '@Interfaces';\r\nimport { LessonSelectors, ModuleSelectors } from '@Selectors';\r\n\r\nimport './module.scss'\r\nimport {\r\n\tgetUser,\r\n\tgetToken\r\n} from '@Redux/utils'\r\nimport {\r\n\tcomputeModulesProgression,\r\n\textractIdFromSlug,\r\n\textractSlugFromString,\r\n\ttoTitleCase\r\n} from '@Helpers'\r\n\r\nexport class ModulePage extends React.Component<IModulePage.IProps, IModulePage.IState> {\r\n\tlessons: { [title:number]: any } = {}\r\n\tmoduleId:number = 0;\r\n\r\n\tconstructor (props:IModulePage.IProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmoduleProgression: 0,\r\n\t\t\tuserLessons: [],\r\n\t\t\tmoduleLessonView: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tif (!getToken()) return this.props.router.replace('/login')\r\n\t\tconst {\r\n\t\t\t// app,\r\n\t\t\t// getUserLessons,\r\n\t\t\tgetCourseModuleLessons,\r\n\t\t\tgetUserLessons,\r\n\t\t\tfetchCourseModuleLessons,\r\n\t\t\tfetchCourseModuleLessonView,\r\n\t\t\trouter\r\n\t\t} = this.props;\r\n\t\tconst { module, course } = (router as any).query;\r\n\r\n\t\tconst courseId = extractIdFromSlug(course);\r\n\t\tconst moduleId = extractIdFromSlug(module);\r\n\t\tconst courseSlug = extractSlugFromString(course);\r\n\t\tconst moduleSlug = extractSlugFromString(module);\r\n\r\n\t\tthis.moduleId = moduleId;\r\n\r\n\t\tfetchCourseModuleLessonView({ courseSlug, moduleSlug, lessonId: 0 },\r\n\t\t\t(moduleLessonView:string) => {\r\n\t\t\t\tthis.setState({ moduleLessonView })\r\n\t\t\t\tfetchCourseModuleLessons({ moduleId })\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tconst moduleLessons = getCourseModuleLessons(moduleId);\r\n\r\n\t\tconst user = getUser()\r\n\t\tlet moduleProgression;\r\n\r\n\t\tgetUserLessons({\r\n\t\t\tmoduleId,\r\n\t\t\tcourseId,\r\n\t\t\tuserId: user.id\r\n\t\t}, (userLessons:any) => {\r\n\t\t\tmoduleProgression =  computeModulesProgression(userLessons, moduleLessons.length);\r\n\r\n\t\t\tif (moduleProgression === 0 || !userLessons.length) {\r\n\t\t\t\tthis.props.updateUserLesson({\r\n\t\t\t\t\tlessonId: 1,\r\n\t\t\t\t\tlessonsCount: moduleLessons.length,\r\n\t\t\t\t\tmoduleId,\r\n\t\t\t\t\tuserId: user.id,\r\n\t\t\t\t\tprogression: 0\r\n\t\t\t\t}, (lessons:any) => {\r\n\t\t\t\t\tmoduleProgression = computeModulesProgression(lessons, moduleLessons.length);\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmoduleProgression,\r\n\t\t\t\t\t\tuserLessons: lessons.map((lesson:any) => lesson.id)\r\n\t\t\t\t\t})\r\n\t\t\t\t});\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmoduleProgression,\r\n\t\t\t\t\tuserLessons: userLessons.map((userLesson:any) => userLesson.id)\r\n\t\t\t\t})\t\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trenderModuleCardLink({\r\n\t\ticon,\r\n\t\ttitle,\r\n\t\tisDisabled\r\n\t}: {\r\n\t\ticon: any,\r\n\t\ttitle: string,\r\n\t\tisDisabled: boolean\r\n\t}):JSX.Element {\r\n\t\tconst Icon = icon;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`card d-flex flex-row module__link-card ${isDisabled && 'module__link-card--disabled'}`}>\r\n\t\t\t\t<section className={'module__link-card__preview d-flex justify-content-center align-items-center'}>\r\n\t\t\t\t\t<Icon />\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className={'px-3 py-4 module__link-card__content'}>\r\n\t\t\t\t\t<h5 className={'h6 module__link-card__title'}>{title}</h5>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tpublic renderUpcomingLinks(): JSX.Element {\r\n\t\tconst {\r\n\t\t\tgetCourseModuleLessons,\r\n\t\t\tisFetchingCourseModuleLessons,\r\n\t\t\trouter: {query}\r\n\t\t} = this.props;\r\n\t\tconst { module, course } = query as any;\r\n\t\tconst lessons = getCourseModuleLessons(this.moduleId);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className={'h5 mb-3'}>Up Next</h4>\r\n\t\t\t\t{isFetchingCourseModuleLessons ?\r\n\t\t\t\t\t<LoaderScreen caption={'Fetching Lessons...'} />:\r\n\t\t\t\t\t<ul className={'list list-unstyled'}>\r\n\t\t\t\t\t\t{lessons.map(({ id, title, type }:any, key:number) => {\r\n\t\t\t\t\t\t\tconst isLesson = type === 'lesson';\r\n\t\t\t\t\t\t\tconst isUserLesson = this.state.userLessons.includes(id) || key === 0\r\n\t\t\t\t\t\t\tconsole.log({ u: this.state.userLessons })\r\n\t\t\t\t\t\t\tconst icon = isLesson ? PlayIcon: ToolIcon;\r\n\t\t\t\t\t\t\tconst WrapperElement = isUserLesson ? Link: 'div';\r\n\t\t\t\t\t\t\tconst WrapperProps = isUserLesson ? {\r\n\t\t\t\t\t\t\t\tprefetch: true,\r\n\t\t\t\t\t\t\t\thref: `/courses/${course}/${module}/lesson-${id}`\r\n\t\t\t\t\t\t\t}: {};\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={key} className={'mb-2'}>\r\n\t\t\t\t\t\t\t\t\t<WrapperElement {...WrapperProps}>\r\n\t\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderModuleCardLink({ icon, title, isDisabled: !isUserLesson })}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</WrapperElement>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst {\r\n\t\t\tapp,\r\n\t\t\tisFetchingCourseModuleLessonView,\r\n\t\t\trouter: {query}\r\n\t\t} = this.props as any\r\n\t\tconst { moduleProgression, moduleLessonView } = this.state;\r\n\t\tconst { module, course } = query;\r\n\t\tconst moduleTitle = extractSlugFromString(module).split('-').join(' ');\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex flex-column module\" style={{ paddingTop: '100px' }}>\r\n\t\t\t\t<Head><title>{toTitleCase(moduleTitle)} | 1Life</title></Head>\r\n\r\n        <Header backlinkHref={`/courses/${course}`} title={moduleTitle}>\r\n\t\t\t\t\t{!app.isUpdatingUserLesson ? <StarsCast progression={moduleProgression || 0} />: <Spinner width={'25px'} height={'25px'} />}\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<section>\r\n\t\t\t\t\t{isFetchingCourseModuleLessonView ? \r\n\t\t\t\t\t\t<LoaderScreen caption={'Fetching content...'} /> :\r\n\t\t\t\t\t\t<div className={'container'}>\r\n\t\t\t\t\t\t\t{convert(moduleLessonView)}\r\n\t\t\t\t\t\t\t<section className={'row'}><div className={'col-12'}>{this.renderUpcomingLinks()}</div></section>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n\treturn {\r\n\t\thome: state.home,\r\n\t\tapp: state.app,\r\n\t\tuser: state.user,\r\n\t\tmodule: state.module,\r\n\t\tgetCourseModuleLessons: (id:number) => ModuleSelectors.getCourseModuleLessons(id)(state),\r\n\t\tisFetchingCourseModuleLessonView: ModuleSelectors.getIsFetchingCourseModuleLessonView(state),\r\n\t\tisFetchingCourseModuleLessons: ModuleSelectors.getIsFetchingCourseModuleLessons(state)\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => (\r\n\t{\r\n\t\tfetchCourseModuleLessonView: bindActionCreators(ModuleActions.fetchCourseModuleLessonView, dispatch),\r\n\t\tfetchCourseModuleLessons: bindActionCreators(ModuleActions.fetchCourseModuleLessons, dispatch),\r\n\t\tupdateUserLesson: bindActionCreators(AppActions.updateUserLesson, dispatch),\r\n\t\tgetUserLessons: bindActionCreators(AppActions.getUserLessons, dispatch),\r\n\t}\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModulePage);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAOA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;AAbA;AAAA;AAAA;AAcA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AA3EA;AAAA;AAAA;AAqFA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAlGA;AAAA;AAAA;AAoGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAMA;AA5IA;AAAA;AAAA;AA8IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AA1KA;AACA;AADA;AAAA;AACA;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AASA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}