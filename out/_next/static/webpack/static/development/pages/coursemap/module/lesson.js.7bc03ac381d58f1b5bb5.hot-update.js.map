{"version":3,"file":"static/webpack/static\\development\\pages\\coursemap\\module\\lesson.js.7bc03ac381d58f1b5bb5.hot-update.js","sources":["webpack:///./src/Helpers/index.ts"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * Returns the depth of a route path string.\r\n * \r\n * @param {String} routePathString - The path string to resolve.\r\n * @returns Number;\r\n */\r\nfunction findRoutePathDepth (routePathString:any) {\r\n  return routePathString\r\n          .split('/')\r\n          .filter((pathFragment:any) => { return pathFragment !== ''})\r\n          .length;\r\n}\r\n\r\n/**\r\n * Calculates the level of progression within a module.\r\n * \r\n * @param {Array<Object>} lessons \r\n * @param {Number} lessonsCount \r\n */\r\nfunction computeModulesProgression (lessons:[], lessonsCount:number) {\r\n  console.log(lessons);\r\n\r\n  const totalProgressions = lessons.reduce((previousTotalProgression:any, currentLesson:any) => {\r\n    return (previousTotalProgression) + currentLesson.progression\r\n  }, 0);\r\n  \r\n  return totalProgressions / lessonsCount;\r\n}\r\n\r\nexport {\r\n  computeModulesProgression,\r\n  findRoutePathDepth\r\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAMA;AACA;AAEA;AAAA;AAEA;AAEA;;;;;;;;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;A","sourceRoot":""}